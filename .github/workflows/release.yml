name: Build and Release OpenEUICC APKs

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  setup-environment:
    name: Set up Environment
    runs-on: ubuntu-latest

    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y openjdk-17-jdk unzip curl

      - name: Set up Android SDK
        run: |
          echo "Setting up Android SDK..."
          mkdir -p $HOME/android-sdk
          curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q sdk-tools.zip -d $HOME/android-sdk/cmdline-tools
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
          rm sdk-tools.zip
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      - name: Set ANDROID_HOME Environment Variable
        run: |
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "PATH=$HOME/android-sdk/platform-tools:$HOME/android-sdk/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV

  build-release:
    name: Build Release APK
    runs-on: ubuntu-latest
    needs: setup-environment

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Generate Keystore (Optional)
        if: ${{ secrets.RELEASE_KEYSTORE != '' }}
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" | base64 --decode > $GITHUB_WORKSPACE/release-keystore.jks

      - name: Build Release APK
        run: |
          echo "Building release APK..."
          ./gradlew clean :app:assembleRelease

      - name: Upload Release APK
        uses: actions/upload-artifact@v3
        with:
          name: Release APK
          path: app/build/outputs/apk/release/*.apk
